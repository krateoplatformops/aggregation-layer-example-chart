apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    k8s-app: {{ .Chart.Name }}
  name: {{ .Chart.Name }}
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: {{ .Chart.Name }}
  strategy:
    rollingUpdate:
      maxUnavailable: 0
  template:
    metadata:
      labels:
        k8s-app: {{ .Chart.Name }}
    spec:
      containers:
        - name: {{ .Chart.Name }}
          image: ghcr.io/krateoplatformops/{{ .Chart.Name }}:{{ .Chart.AppVersion }}
          imagePullPolicy: IfNotPresent
          {{- with .Values.podEnv }}
          env:
            {{- toYaml . | nindent 10 }}
          {{- end }}
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: https
              scheme: HTTPS
            periodSeconds: 10
          ports:
            - containerPort: 8443
              name: https
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: https
              scheme: HTTPS
            initialDelaySeconds: 20
            periodSeconds: 10
          resources:
            requests:
              cpu: 100m
              memory: 200Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 1000
          volumeMounts:
            - mountPath: /tmp
              name: tmp-dir
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      serviceAccountName: {{ .Chart.Name }}
      volumes:
        - emptyDir: {}
          name: tmp-dir
